/* 
  World-Class SCSS: Modular, Scalable & Responsive
  Features:
    - Advanced CSS Variables with fallback
    - Nested architecture for maintainability
    - Responsive design with modern breakpoints
    - Smooth animations and transitions
    - Dark mode with media query
    - Utility mixins and functions
    - Integration with Minima theme
*/

// Import Minima theme with namespace
@use 'minima' as m;

// Custom variables with Minima integration
$global-breakpoints: (
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px
);

:root {
  // Base colors with Minima fallback
  --primary: #{m.$blue} !default; // Using Minima's blue
  --secondary: #8338ec;
  --accent: #ffbe0b;
  --bg: #f8f9fa;
  --text: #23272f;
  --border: #e0e0e0;
  --radius: 8px;
  --shadow: 0 2px 8px rgba(60, 60, 90, 0.09);
  --transition: 0.2s cubic-bezier(0.4, 0, 0.2, 1);

  // Font settings
  --font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
  --font-size-base: 1rem;
  --line-height: 1.6;
}

@media (prefers-color-scheme: dark) {
  :root {
    --bg: #22223b;
    --text: #f8f9fa;
    --border: #44445a;
    --shadow: 0 2px 8px rgba(0, 0, 0, 0.20);
  }
}

// Mixins for reusable styles
@mixin respond-to($breakpoint) {
  $value: map-get($global-breakpoints, $breakpoint);
  @media (min-width: $value) {
    @content;
  }
}

@mixin transition($properties...) {
  transition: $properties var(--transition);
}

// Reset and base styles
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: var(--font-family);
  color: var(--text);
  background: var(--bg);
  line-height: var(--line-height);
  min-height: 100vh;
  @include transition(color, background);
}

// Layout
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 32px 16px;

  @include respond-to('sm') {
    padding: 40px 24px;
  }

  @include respond-to('md') {
    padding: 48px 32px;
  }
}

// Typography
h1, h2, h3, h4, h5, h6 {
  color: var(--primary);
  margin: 1.2em 0 0.5em;
  font-weight: 700;
  letter-spacing: 0.02em;

  @include respond-to('md') {
    letter-spacing: 0.04em;
  }
}

// Buttons
.button,
button,
input[type="submit"] {
  background: var(--primary);
  color: #fff;
  padding: 0.7em 1.5em;
  border: none;
  border-radius: var(--radius);
  font-size: var(--font-size-base);
  font-weight: 600;
  cursor: pointer;
  box-shadow: var(--shadow);
  @include transition(background, box-shadow, transform);

  &:hover {
    background: var(--secondary);
    transform: translateY(-2px) scale(1.03);
    box-shadow: 0 4px 18px rgba(131, 56, 236, 0.14);
  }

  &:focus {
    outline: 2px solid var(--accent);
    outline-offset: 2px;
  }
}

// Inputs
input,
textarea,
select {
  padding: 0.6em 1em;
  border: 1px solid var(--border);
  border-radius: var(--radius);
  font-size: var(--font-size-base);
  background: #fff;
  color: var(--text);
  @include transition(border-color);

  &:focus {
    border-color: var(--primary);
    outline: none;
  }
}

// Card
.card {
  background: #fff;
  border-radius: var(--radius);
  padding: 2em;
  box-shadow: var(--shadow);
  margin-bottom: 2em;
  @include transition(box-shadow, transform);

  &:hover {
    box-shadow: 0 8px 24px rgba(58, 134, 255, 0.13);
    transform: translateY(-2px) scale(1.01);
  }
}

// Navbar
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.2em 2em;
  background: var(--primary);
  color: #fff;
  border-radius: 0 0 var(--radius) var(--radius);
  box-shadow: var(--shadow);

  a {
    color: #fff;
    text-decoration: none;
    margin-left: 1em;
    @include transition(color);

    &:hover {
      color: var(--accent);
    }
  }

  @include respond-to('sm') {
    flex-direction: row;
    align-items: center;
  }

  @include respond-to('md') {
    padding: 1.5em 3em;
  }
}

// Utility classes
.flex {
  display: flex;
}

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.grid {
  display: grid;
  gap: 1.5em;
}

.grid-2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid-3 {
  grid-template-columns: repeat(3, 1fr);
}

@include respond-to('md') {
  .grid-2,
  .grid-3 {
    grid-template-columns: repeat(2, 1fr);
  }
}

@include respond-to('lg') {
  .grid-3 {
    grid-template-columns: repeat(3, 1fr);
  }
}

// Spacing (using a variable)
$spacing-unit: 1em;
.mt-1 { margin-top: $spacing-unit; }
.mb-1 { margin-bottom: $spacing-unit; }
.pt-1 { padding-top: $spacing-unit; }
.pb-1 { padding-bottom: $spacing-unit; }

// Custom scrollbar
::-webkit-scrollbar {
  width: 10px;
  background: var(--bg);
}

::-webkit-scrollbar-thumb {
  background: var(--primary);
  border-radius: 6px;
}

// Links
a {
  color: var(--secondary);
  text-decoration: underline;
  @include transition(color);

  &:hover,
  &:focus {
    color: var(--accent);
    text-decoration: none;
  }
}

// Animations
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: none; }
}

.fade-in {
  animation: fadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) both;
}

// Dark mode enhancements
@media (prefers-color-scheme: dark) {
  body,
  .container,
  .card,
  input,
  textarea,
  select {
    background: #24243e;
    color: #f8f9fa;
    border-color: #393963;
  }

  .navbar {
    background: var(--secondary);
  }
}

// Language Switch Button
.lang-switch-btn {
  margin-top: 16px;
  padding: 9px 22px;
  background: linear-gradient(90deg, #1fd1f9, #ff7eb3 80%);
  color: #191c2b;
  border-radius: 24px;
  border: none;
  font-weight: bold;
  cursor: pointer;
  @include transition(background, color);

  &:hover {
    background: linear-gradient(90deg, #ff7eb3, #1fd1f9 80%);
    color: #fff;
  }
}
